<!--paginate.ejs-->
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Hello Bulma!</title>
    <link rel="stylesheet" href="https://unpkg.com/buefy/dist/buefy.min.css">
</head>

<body>
    <section class="section">
        <div class="container" id="app">

            <!-- v-for can use bookings in Vue instance's data -->
            <div class="card" v-for="booking in bookings">
                <header class="card-header">
                    <p class="card-header-title">
                        <!-- Vue use {{}} to get Vue instance's data -->
                        {{booking.name}}
                    </p>
                </header>
                <div class="card-content">
                    <div class="content">
                        {{booking.numTickets}}
                    </div>
                </div>
            </div>
            <br>

            <nav class="pagination" role="navigation" aria-label="pagination">
                <!-- only button supports disabled, 'v-bind' can bind a value to an attribute,
                    if isFirstPage is true, then disabled attribute will be work -->
                <button class="pagination-previous" v-bind:disabled="isFirstPage"
                    v-on:click="fetchData(limit, offset - limit)">Previous</button>
                <button class="pagination-next" :disabled="isLastPage"
                    v-on:click="fetchData(limit, offset + limit)">Next page</button>
                <ul class="pagination-list">
                    <li>
                        <a class="pagination-link" @click="fetchData(limit, 0)">1</a>
                    </li>
                    <li>
                        <span class="pagination-ellipsis">&hellip;</span>
                    </li>
                    <li>
                        <!-- if 'v-if' is true, then it will work, otherwise it won't present -->
                        <a class="pagination-link" v-if="!isFirstPage" @click="fetchData(limit, offset - limit)">{{currentPageNumber - 1}}</a>
                    </li>
                    <li>
                        <a class="pagination-link is-current" @click="fetchData(limit, offset)">{{currentPageNumber}}</a>
                    </li>
                    <li>
                        <a class="pagination-link" v-if="!isLastPage" @click="fetchData(limit, offset + limit)">{{currentPageNumber + 1}}</a>
                    </li>
                    <li>
                        <span class="pagination-ellipsis">&hellip;</span>
                    </li>
                    <li>
                        <a class="pagination-link" @click="fetchData(limit, (Math.ceil(numOfRecords / limit) - 1) * limit)">{{Math.ceil(numOfRecords / limit)}}</a>
                    </li>
                </ul>
            </nav>

            <div class="columns">
                <!-- v-model will update limit automactically refer to the input value -->
                <b-input class="column" v-model="limit"></b-input>
                <div class="column">
                    <button class="button is-warning" @click="fetchData(limit, 0)">Go!</button>
                </div>
            </div>
        </div>
    </section>

    <script src="https://unpkg.com/vue"></script>
    <!-- Full bundle -->
    <script src="https://unpkg.com/buefy/dist/buefy.min.js"></script>

    <!-- Individual components -->
    <script src="https://unpkg.com/buefy/dist/components/table"></script>
    <script src="https://unpkg.com/buefy/dist/components/input"></script>

    <script>
        new Vue({
            /* A Vue instance are specified by el */
            el: '#app',
            data: {
                numOfRecords: parseInt("<%= numOfRecords %>"),
                bookings: [],
                currentPageNumber: 1,
                limit: 2,
                offset: 0,
            },
            computed: {
                /* return true or false */
                isFirstPage: function() {return (this.offset < this.limit) },
                isLastPage: function() {return (this.offset + this.limit >= this.numOfRecords) },
            },
            methods: {
                fetchData: async function (limit, offset) {

                    var response = await fetch("/bookings/vaginate?limit=" + limit + "&offset=" + offset);

                    if (response.ok) {
                        var bookings = await response.json();
                        /* 'this' refers to Vue instance, and can directly use its data */
                        this.bookings = bookings;

                        /* update limit and offset after received a response from AJAX call */
                        this.limit = Math.max(limit, 2) || 2;
                        this.offset = offset;

                        this.currentPageNumber = Math.floor(offset / limit) + 1;

                    } else {
                        alert(response.statusText);
                    }
                },
            },
            /* mounted is Life Cycle Hooks, so put out of methods */
            mounted: function() {
                this.fetchData(this.limit, this.offset);
            },
        })
    </script>
</body>

</html>